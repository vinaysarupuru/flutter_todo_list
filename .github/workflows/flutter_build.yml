name: Flutter Multiplatform Test Builds

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
      - run: flutter pub get
      - run: flutter build apk --debug
      - uses: actions/upload-artifact@v4
        with:
          name: android-debug.apk
          path: build/app/outputs/flutter-apk/app-debug.apk

  ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
      - run: flutter pub get
      - name: Build iOS for simulator
        run: |
          flutter clean
          flutter build ios --debug --simulator --no-codesign
      - name: Debug iOS build artifacts
        run: |
          echo "Listing build directory contents:"
          ls -la build/
          if [ -d "build/ios" ]; then
            echo "iOS build directory contents:"
            ls -la build/ios/
            echo "Searching for app bundles:"
            find build -name "*.app" -type d
          fi
      - name: Create iOS artifact
        run: |
          # Create a zip file with whatever we have in the build directory
          cd build
          if [ -d "ios" ]; then
            zip -r ios-artifact.zip ios
            echo "Created iOS artifact from build output"
          else
            # Create a minimal artifact indicating the build issue
            echo "iOS build did not produce expected output" > ios-artifact.zip
            echo "Created placeholder artifact"
          fi
      - uses: actions/upload-artifact@v4
        with:
          name: ios-debug-build
          path: build/ios-artifact.zip
        if: always()

  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
      - run: flutter pub get
      - run: flutter build web --release
      - run: zip -r web.zip build/web
      - uses: actions/upload-artifact@v4
        with:
          name: web-release.zip
          path: web.zip

  windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
      - run: choco install visualstudio2022buildtools -y  # Install required tools
      - run: flutter config --enable-windows-desktop
      - run: flutter pub get
      - run: flutter build windows --release
      - name: Debug Windows build artifacts
        run: |
          Write-Host "Listing build directory contents:"
          if (Test-Path "build") {
            Get-ChildItem -Path "build" -Recurse | Select-Object FullName
            if (Test-Path "build\windows") {
              Write-Host "Windows build directory contents:"
              Get-ChildItem -Path "build\windows" -Recurse | Select-Object FullName
            } else {
              Write-Host "Windows build directory not found"
            }
          } else {
            Write-Host "Build directory not found"
          }
        shell: pwsh
      - name: Create Windows artifact
        run: |
          $releaseDir = "build\windows\runner\Release"
          if (Test-Path $releaseDir) {
            Write-Host "Found Windows release directory, creating zip artifact"
            Compress-Archive -Path "$releaseDir\*" -DestinationPath windows.zip -Force
          } else {
            Write-Host "Windows release directory not found, creating empty artifact"
            Set-Content -Path windows.zip -Value "Windows build did not produce expected output"
          }
        shell: pwsh
      - uses: actions/upload-artifact@v4
        with:
          name: windows-release.zip
          path: windows.zip
        if: always()

  macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
      - run: flutter pub get
      - run: flutter build macos --release
      - run: zip -r macos.zip build/macos/Build/Products/Release/*.app
      - uses: actions/upload-artifact@v4
        with:
          name: macos-release.zip
          path: macos.zip

  linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.2'
      - name: Install Linux dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libx11-dev pkg-config cmake ninja-build libblkid-dev
      - run: flutter pub get
      - run: flutter config --enable-linux-desktop
      - run: flutter build linux --release
      - run: zip -r linux.zip build/linux/x64/release/bundle
      - uses: actions/upload-artifact@v4
        with:
          name: linux-release.zip
          path: linux.zip

  release:
    runs-on: ubuntu-latest
    needs: [android, ios, web, windows, macos, linux]
    if: github.event_name == 'release'
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          files: |
            artifacts/**/*.apk
            artifacts/**/*.ipa
            artifacts/**/*.zip