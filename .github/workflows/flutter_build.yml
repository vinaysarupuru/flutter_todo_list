name: Flutter CI/CD Pipeline

on:
  # Trigger on pushes to tags (to create a release) and on PRs to main.
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  build_android:
    name: Build Android APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'
      - name: Get Dependencies and Clean
        run: |
          flutter pub get
          flutter clean
      - name: Build Android APK
        run: flutter build apk --release --split-per-abi
      - name: Upload Android APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  build_ios:
    name: Build iOS App
    runs-on: macos-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'
      - name: Get Dependencies and Clean
        run: |
          flutter pub get
          flutter clean
      - name: Build iOS App (No Codesign)
        run: flutter build ios --no-codesign
      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: build/ios/iphoneos

  build_web:
    name: Build Web App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'
      - name: Get Dependencies and Clean
        run: |
          flutter pub get
          flutter clean
      - name: Build Web App
        run: flutter build web
      - name: Upload Web Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

  build_desktop:
    name: Build Desktop Apps
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'
      - name: Get Dependencies and Clean
        run: |
          flutter pub get
          flutter clean
      - name: Enable Desktop Support and Build App
        run: |
          if [ "${{ runner.os }}" = "Linux" ]; then
            flutter config --enable-linux-desktop
            flutter build linux --release
          elif [ "${{ runner.os }}" = "macOS" ]; then
            flutter config --enable-macos-desktop
            flutter build macos --release
          elif [ "${{ runner.os }}" = "Windows" ]; then
            flutter config --enable-windows-desktop
            flutter build windows --release
          fi
      - name: Create Executable and ZIP Artifact
        run: |
          mkdir -p release
          if [ "${{ runner.os }}" = "Linux" ]; then
            mv build/linux/x64/release/bundle release/linux_app
            zip -r release/linux_app.zip release/linux_app
          elif [ "${{ runner.os }}" = "macOS" ]; then
            mv build/macos/Build/Products/Release/app.app release/macos_app
            zip -r release/macos_app.zip release/macos_app
          elif [ "${{ runner.os }}" = "Windows" ]; then
            mkdir release_temp
            xcopy build\\windows\\runner\\Release release_temp /E /I
            powershell -Command "Compress-Archive -Path release_temp -DestinationPath release\\windows_app.zip"
          fi
      - name: Upload Desktop Artifact
        uses: actions/upload-artifact@v4
        with:
          # Use a consistent naming convention for artifacts.
          name: desktop-${{ runner.os }}
          path: release

  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build_android, build_ios, build_web, build_desktop]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Download Android Artifact
        uses: actions/download-artifact@v4
        with:
          name: android-apk
          path: artifacts/android
      - name: Download iOS Artifact
        uses: actions/download-artifact@v4
        with:
          name: ios-app
          path: artifacts/ios
      - name: Download Web Artifact
        uses: actions/download-artifact@v4
        with:
          name: web-build
          path: artifacts/web
      - name: Download Desktop Artifact (Linux)
        uses: actions/download-artifact@v4
        with:
          name: desktop-Linux
          path: artifacts/desktop/Linux
      - name: Download Desktop Artifact (macOS)
        uses: actions/download-artifact@v4
        with:
          name: desktop-macOS
          path: artifacts/desktop/macOS
      - name: Download Desktop Artifact (Windows)
        uses: actions/download-artifact@v4
        with:
          name: desktop-Windows
          path: artifacts/desktop/Windows
      - name: Create Release and Attach Artifacts
        uses: ncipollo/release-action@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          prerelease: false
          files: |
            artifacts/android/app-release.apk
            artifacts/ios/**
            artifacts/web/**
            artifacts/desktop/Linux/release/linux_app.zip
            artifacts/desktop/macOS/release/macos_app.zip
            artifacts/desktop/Windows/release/windows_app.zip
