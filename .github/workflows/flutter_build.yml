name: Flutter CI/CD Pipeline

# Trigger on tag pushes (for release) and pull requests to main.
on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - main

jobs:
  android:
    name: Build Android APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Clean project
        run: flutter clean
      - name: Build Android APK
        run: flutter build apk --release --split-per-abi
      - name: Upload Android APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: build/app/outputs/flutter-apk/app-release.apk

  ios:
    name: Build iOS App
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Clean project
        run: flutter clean
      - name: Build iOS App (no codesign)
        run: flutter build ios --no-codesign
      - name: Upload iOS Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-app
          path: build/ios/iphoneos

  web:
    name: Build Web App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Build Web App
        run: flutter build web
      - name: Upload Web Artifact
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/web

  desktop:
    name: Build Desktop Apps (macOS, Windows, Linux)
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'
      - name: Get Flutter dependencies
        run: flutter pub get
      - name: Clean project
        run: flutter clean
      - name: Enable Desktop Support & Build App
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            flutter config --enable-linux-desktop
            flutter build linux --release
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            flutter config --enable-macos-desktop
            flutter build macos --release
          else
            flutter config --enable-windows-desktop
            flutter build windows --release
          fi
      - name: Create Executable and ZIP for Desktop
        run: |
          mkdir -p release
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            mv build/linux/x64/release/bundle release/linux_app
            zip -r release/linux_app.zip release/linux_app
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            mv build/macos/Build/Products/Release/app.app release/macos_app
            zip -r release/macos_app.zip release/macos_app
          else
            mv build/windows/runner/Release release/windows_app
            powershell -Command "Compress-Archive -Path release/windows_app -DestinationPath release/windows_app.zip"
          fi
      - name: Upload Desktop Artifact
        uses: actions
